what do I want to learn or understand better?
Now: I have made some good progress from last weeks learning goal and I now have a better understanding of each component. But I still lack a good understanding of merging different branches of github and making my changes work with my teammates changes.
Goal: I want to learn how to merge branches in an effective way
What to do: Read about merging an aboutgithub, try and merge different branches.
how can I help someone else, or the entire team, to learn something new?

Now: During this sprint I have helped my teammates understand the inner workings of the app, more specifically the navigator component and how to add new views, and items to the side menu.
Goal: To further help my teammates understand the app so that the can succeed in their sprint goals
What to do: Explain to the different sprint teams which part of the code is relevant for them, what they can do to change it and how to go about it. Share my code with them as an example

what is my contribution towards the team’s application of scrum?
Now: Our user story was actually badly specified, but me and my sprint mate figured out a way to phrase it better and to divide into more specific tasks. It turned out our user story already existed in one way, but we added it in a better way.
Goal: For this weeks sprint, I want to help my team respecify their tasks so that they can achieve more with their user story.
What to do: Help my teammates specify better tasks

what is my contribution towards the team’s deliveries? That means that for the personal learning objective you will each week write down what you have achieved in relation to last week's ambition (technologies, concepts and skills learnt as well as how this was achieved), what you would like to achieve for the next week and how to make the change happen. The first week of the course you describe the current situation by motivating a learning objective. It is perfectly fine to change objective/s each week as long as you can motivate the change and you evaluate the outcome of the previous week (e.g. describing the current situation).
Now: I think I’ve found a good way of learning the code. Mainly I use a mix of trial and error, googling and intuitively trying to backwards engineer code sections. I now want to help my team members understand the code, and more importantly, how to learn how to understand the code.
Goal: Explain to my team how they should go about learning the code.
What To do: Show them how I do it, show them the reasoning behind my code.

